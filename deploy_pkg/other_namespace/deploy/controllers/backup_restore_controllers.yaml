apiVersion: apps/v1
kind: Deployment
metadata:
  name: kahu-backup-controller
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backuprestore-controllers
  template:
    metadata:
      labels:
        app: backuprestore-controllers
    spec:
      serviceAccountName: kahu
      containers:
        - image: docker.io/library/controllermanager:v0.1.0
          imagePullPolicy: IfNotPresent
          name: backup
          command: ["/usr/local/bin/controllermanager"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kahu-backup-clusterrole
subjects:
  - kind: ServiceAccount
    name: kahu
    namespace: test-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-clusterrole
rules:
  - apiGroups:
    - "kahu.io"
    resources:
      - backups
      - backups/status
      - restores
      - restores/status
      - backuplocations
      - providers
      - volumebackupcontents
      - volumebackupcontents/status
    verbs:
      - get
      - watch
      - list
      - patch
      - update
      - delete       
  - apiGroups: ["*"]
    resources: ["*"]
    verbs:
      - create
      - get
      - list
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kahu-backup-role
subjects:
  - kind: ServiceAccount
    name: kahu
    namespace: test-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kahu
  namespace: test-ns
